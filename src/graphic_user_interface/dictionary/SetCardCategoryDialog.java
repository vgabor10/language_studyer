package graphic_user_interface.dictionary;

import language_studyer.Category;
import language_studyer.CategoryContainer;
import java.awt.event.KeyEvent;
import java.util.Set;
import javax.swing.table.DefaultTableModel;

public class SetCardCategoryDialog extends javax.swing.JDialog {
    
    private Set<Integer> outCategoryIndexes;
    
    private CategoryContainer allCategoryContainer;
    private CategoryContainer selectedCategoryContainer = new CategoryContainer();
    
    private final DefaultTableModel allCategoriesTableModel;
    private final DefaultTableModel selectedCategoriesTableModel;
    
    public SetCardCategoryDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        selectedCategoriesTableModel
                = (DefaultTableModel)selectedCategoriesTable.getModel();
        allCategoriesTableModel
                = (DefaultTableModel)allCategoriesTable.getModel();
        
        okButton.setMnemonic(KeyEvent.VK_O);
        closeButton.setMnemonic(KeyEvent.VK_C);
    }
    
    public void setAllCategories(CategoryContainer cc) {
        allCategoryContainer = cc;
        
        for (int i=0; i<allCategoryContainer.numberOfItems(); i++) {
            String categoryName = allCategoryContainer.getCategoryNameByOrder(i);
            allCategoriesTableModel.addRow(new Object[]{categoryName});
        }
    }
    
    public void setSelectedCategories(Set<Integer> categoryIndexes) {
        for (int categoryIndex : categoryIndexes) {
            Category cardCategory = allCategoryContainer.getCategoryByIndex(categoryIndex);
            selectedCategoriesTableModel.addRow(new Object[]{cardCategory.name});
            selectedCategoryContainer.add(cardCategory);
        }
        
        outCategoryIndexes = categoryIndexes;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        selectedCategoriesTable = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        allCategoriesTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        selectedCategoriesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Selected categories"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        selectedCategoriesTable.setToolTipText("");
        selectedCategoriesTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        selectedCategoriesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectedCategoriesTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(selectedCategoriesTable);

        jButton3.setText(">");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("<");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        allCategoriesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "All categories"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        allCategoriesTable.setToolTipText("");
        allCategoriesTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        allCategoriesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allCategoriesTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(allCategoriesTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(okButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(closeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(closeButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        addCategoryToCard();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void addCategoryToCard() {
        if (allCategoriesTable.getSelectedRowCount() == 1) {
            int selectedTableRowIndex = allCategoriesTable.getSelectedRow();
            Category cardCategory = allCategoryContainer.getCategoryByOrder(selectedTableRowIndex);

            if (!selectedCategoryContainer.containsCategoryWithIndex(cardCategory.index)) {
                selectedCategoriesTableModel.addRow(new Object[]{cardCategory.name});
                selectedCategoryContainer.add(cardCategory);
            }
            
            allCategoriesTable.clearSelection();
        }
    }
    
    private void removeCategoryFromCard() {
        if (selectedCategoriesTable.getSelectedRowCount() == 1) {
            int selectedTableRowIndex = selectedCategoriesTable.getSelectedRow();
            selectedCategoriesTableModel.removeRow(selectedTableRowIndex);
            selectedCategoryContainer.removeCategoryByOrder(selectedTableRowIndex);
            
            selectedCategoriesTable.clearSelection();
        }
    }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        removeCategoryFromCard();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        outCategoryIndexes.clear();
        
        for (int i=0; i<selectedCategoryContainer.numberOfItems(); i++) {
            outCategoryIndexes.add(selectedCategoryContainer.getCategoryByOrder(i).index);
        }
        
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void allCategoriesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allCategoriesTableMouseClicked
        if (evt.getClickCount() == 2) {
            addCategoryToCard();   
        }
    }//GEN-LAST:event_allCategoriesTableMouseClicked

    private void selectedCategoriesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectedCategoriesTableMouseClicked
        if (evt.getClickCount() == 2) {
            removeCategoryFromCard();   
        }
    }//GEN-LAST:event_selectedCategoriesTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SetCardCategoryDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SetCardCategoryDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SetCardCategoryDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SetCardCategoryDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SetCardCategoryDialog dialog = new SetCardCategoryDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable allCategoriesTable;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton okButton;
    private javax.swing.JTable selectedCategoriesTable;
    // End of variables declaration//GEN-END:variables
}
