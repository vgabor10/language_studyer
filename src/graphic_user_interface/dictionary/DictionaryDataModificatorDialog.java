package graphic_user_interface.dictionary;

import dictionary.Card;
import dictionary.CardContainer;
import dictionary.CardFinder;
import disc_operation_handlers.DictionaryDataModificator;
import graphic_user_interface.common.DialogAnswer;
import java.awt.event.KeyEvent;
import java.util.Vector;
import javax.swing.DefaultCellEditor;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import study_item_objects.AnswerDataContainer;

public class DictionaryDataModificatorDialog extends javax.swing.JDialog {

    private CardContainer cardContainer;
    private AnswerDataContainer answerDataContainer;
    
    private final CardFinder cardFinder = new CardFinder();
    private final DefaultTableModel tableModel;
    
    private Vector<Card> listedCards;
   
    //TODO: table column order can be changed, it can cause errors at modification
    
    public DictionaryDataModificatorDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        setLocationRelativeTo(null);
        
        tableModel = (DefaultTableModel)jTable1.getModel();
        
        //table rows are not editable but can be selected
        JTextField tf = new JTextField();
        tf.setEditable(false);
        DefaultCellEditor editor = new DefaultCellEditor( tf );
        jTable1.setDefaultEditor(Object.class, editor);
        
        jTextField1.setText("");
        jTextField1.requestFocus();
        
        jButton1.setMnemonic(KeyEvent.VK_C);
        jButton4.setMnemonic(KeyEvent.VK_A);
        modificateCardButton.setMnemonic(KeyEvent.VK_M);
        deleteCardButton.setMnemonic(KeyEvent.VK_D);
    }

    public void initialise() {
        cardFinder.setCardContainer(cardContainer);
    }
    
    public void setCardContainer(CardContainer a) {
        cardContainer = a;
    }
    
    public void setAnswerDataContainer(AnswerDataContainer a) {
        answerDataContainer = a;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        modificateCardButton = new javax.swing.JButton();
        deleteCardButton = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "term", "definition"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTextField1.setText("jTextField1");
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "foreign -> hungarian", "hungarian -> foreign" }));

        modificateCardButton.setText("Modificate selected card");
        modificateCardButton.setEnabled(false);
        modificateCardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificateCardButtonActionPerformed(evt);
            }
        });

        deleteCardButton.setText("Delete card");
        deleteCardButton.setEnabled(false);
        deleteCardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCardButtonActionPerformed(evt);
            }
        });

        jButton4.setText("Add new card");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(modificateCardButton, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                            .addComponent(deleteCardButton, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modificateCardButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteCardButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER &&
                !jTextField1.getText().isEmpty() &&
                jComboBox1.getSelectedIndex() == 0) {
            
            if (jTextField1.isEditable()) {                   
                listedCards = cardFinder.getCardsWithGivenTermPart(jTextField1.getText());

                for (int i=0; i<listedCards.size(); i++) {

                    tableModel.addRow(new Object[] {
                        listedCards.get(i).term, 
                        listedCards.get(i).definition});
                }

                jTextField1.setEditable(false);   
            }
            else {
                setFormForNextQuery();
            }
        }
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER &&
                !jTextField1.getText().isEmpty() &&
                jComboBox1.getSelectedIndex() == 1) {
            
            if (jTextField1.isEditable()) {                   
                listedCards = cardFinder.getCardsWithGivenDefinitionPart(jTextField1.getText());

                for (int i=0; i<listedCards.size(); i++) {

                    tableModel.addRow(new Object[] {
                        listedCards.get(i).term, 
                        listedCards.get(i).definition});
                }

                jTextField1.setEditable(false);   
            }
            else {
                setFormForNextQuery();
            }
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void setFormForNextQuery() {
        jTextField1.setText("");
        jTextField1.setEditable(true);
        jTextField1.requestFocus();

        for (int i=tableModel.getRowCount()-1; 0<=i; i--) {
            tableModel.removeRow(i);
        }
    }

    
    private void modificateCardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificateCardButtonActionPerformed
        int selectedTableRowIndex = jTable1.getSelectedRow();
        Card cardToModificate = listedCards.get(selectedTableRowIndex);
        
        CardModificatorDialog dialog 
                = new CardModificatorDialog(new javax.swing.JFrame(), true);
        dialog.cardContainer = cardContainer;
        dialog.cardToModificate = cardToModificate;
        dialog.initialise();
        dialog.setVisible(true);
        
        tableModel.setValueAt(cardToModificate.term, selectedTableRowIndex, 0);
        tableModel.setValueAt(cardToModificate.definition, selectedTableRowIndex, 1);
    }//GEN-LAST:event_modificateCardButtonActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        CardAdderDialog dialog = new CardAdderDialog(new javax.swing.JFrame(), true);
        dialog.setCardContainer(cardContainer);
        dialog.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void deleteCardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCardButtonActionPerformed
        int selectedTableRowIndex = jTable1.getSelectedRow();
        Card cardToDelete = listedCards.get(selectedTableRowIndex);
        
        CardDeleteReinforceDialog dialog 
                = new CardDeleteReinforceDialog(new javax.swing.JFrame(), true);
        DialogAnswer dialogAnswer = new DialogAnswer();
        dialog.dialogAnswer = dialogAnswer;
        dialog.cardToDelete = cardToDelete;
        dialog.initialise();
        dialog.setVisible(true);
        
        if (dialogAnswer.answer) {
            DictionaryDataModificator dictionaryDataModificator 
                    = new DictionaryDataModificator();
            dictionaryDataModificator.setCardContainer(cardContainer);
            dictionaryDataModificator.setAnswerDataContainer(answerDataContainer);
            dictionaryDataModificator.removeCardWithAnswersByCardIndex(cardToDelete.index);
            
            modificateCardButton.setEnabled(false);
            deleteCardButton.setEnabled(false);
            
            tableModel.removeRow(selectedTableRowIndex);
        }
    }//GEN-LAST:event_deleteCardButtonActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        modificateCardButton.setEnabled(true);
        deleteCardButton.setEnabled(true);
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DictionaryDataModificatorDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DictionaryDataModificatorDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DictionaryDataModificatorDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DictionaryDataModificatorDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DictionaryDataModificatorDialog dialog = new DictionaryDataModificatorDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteCardButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton modificateCardButton;
    // End of variables declaration//GEN-END:variables
}
